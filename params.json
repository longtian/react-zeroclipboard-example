{"name":"React-zeroclipboard-example","tagline":"Example for ZeroClipboard usage with React and Webpack","body":"# react-zeroclipboard-example\r\n\r\n> An example showing how to use ZeroClipboard in React application.\r\n\r\n## Preface\r\n\r\nThis example assumes you have working experience with these tools or frameworks\r\n\r\n* React\r\n* Babel\r\n* Webpack\r\n* ZeroClipboard\r\n\r\nThe code base is written in ES6, and we will use Babel to compile it to ES5. Webpack comes in handy to make this workflow automated.\r\n\r\n### Install ZeroClipboard\r\n\r\nZeroClipboard can be easily installed using NPM.\r\n\r\n```sh\r\nnpm install zeroclipboard -D\r\n```\r\n\r\n### Import ZeroClipboad\r\n\r\nAfter installing it, it can be imported just like importing other modules.\r\n\r\n```js\r\nimport React from 'react';\r\nimport ZeroClipboard from 'zeroclipboard';\r\n```\r\n\r\n### Create new CopyButton component\r\n\r\nWe will create a React component using [stateless functions](http://facebook.github.io/react/docs/reusable-components.html#stateless-functions),\r\nthe button is intialized in the [ref-callback](http://facebook.github.io/react/docs/more-about-refs.html#the-ref-callback-attribute)\r\n\r\n```js\r\nconst CopyButton = (props)=> {\r\n  return <button {...props} ref={elem=>new ZeroClipboard(elem)}>\r\n    {props.children}\r\n  </button>\r\n}\r\n```\r\n\r\n### Use the CopyButton component in your app\r\n\r\n```js\r\n<CopyButton data-clipboard-text={textToBeCopied}>Click to copy</CopyButton>\r\n```\r\n\r\n### Solve the SWF dependency\r\n\r\nAfter the package is built and deployed, you will most likely run into this problem.\r\n\r\n![swf 404 not found](README/404.png)\r\n\r\n**The SWF file is not found**, you can mannually copy this file into your static server and make sure the path is correct.\r\nBut you need to do this everytime after you do a fresh deployment. Let's solve the problem using webpack.\r\n\r\nFirst, we need to config the ZeroClipboard's `swfPath` option:\r\n\r\n```\r\nZeroClipboard.config({\r\n  swfPath: require('zeroclipboard/dist/ZeroClipboard.swf')\r\n});\r\n```\r\n\r\nThis piece of code looks very strange because a `.swf` file is `required`. Unless, the second step, we tell webpack how to deal with\r\n`.swf` files. We need a [loader](http://webpack.github.io/docs/using-loaders.html) which will simply copy required dependencies which\r\nends with `.swf` to the webpack output path. This loader can be installed by typing `npm install file-loader -D`. Last, we change the\r\n`module.loaders` part in `webpack.config.js` to:\r\n\r\n```js\r\n{\r\n  test: /\\.swf$/,\r\n  loader: 'file-loader'\r\n}\r\n```\r\n\r\n### Close\r\n\r\nIn this example, we build a React application which integrates ZeroClipboard. The application is written in ES6\r\nand compiled to ES5 using webpack. In order to solve the `ZeroClipboard.swf` 404 not found problem smartly, we use a\r\nwebpack loader called `file-loader`.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}